<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>MMS_GetMeetingIdsBasedOnUser</name>
        <uuid>_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35730</uuid>
        <description>rule returns meeting ids which users belongs to</description>
        <parentUuid>_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35718</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>with(
  local!pagingInfo:#&quot;SYSTEM_SYSRULES_pagingInfo&quot;(startIndex:1,batchSize:-1),
  local!int_meetingIds1:#&quot;SYSTEM_SYSRULES_queryEntity&quot;(
    entity:#&quot;_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35551&quot;,
    query:#&quot;SYSTEM_SYSRULES_query&quot;(
      selection:#&quot;SYSTEM_SYSRULES_querySelection&quot;(
        columns:{
          #&quot;SYSTEM_SYSRULES_queryColumn&quot;(field:&quot;meetingId&quot;)
        }
      ),
      logicalExpression:#&quot;SYSTEM_SYSRULES_queryLogicalExpression&quot;(
        operator:&quot;AND&quot;,
        filters:{
          #&quot;SYSTEM_SYSRULES_queryFilter&quot;(
            field:&quot;createdUser&quot;,
            operator:&quot;=&quot;,
            value:fn!loggedinuser()
          ),
          #&quot;SYSTEM_SYSRULES_queryFilter&quot;(
            field:&quot;status&quot;,
            operator:&quot;&lt;&gt;&quot;,
            value:#&quot;_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35743&quot;[4]
          )
        }
      ),
      pagingInfo:local!pagingInfo
    )
  ).data,
  local!int_meetingIds2:#&quot;SYSTEM_SYSRULES_queryEntity&quot;(
    entity:#&quot;_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35548&quot;,
    query:#&quot;SYSTEM_SYSRULES_query&quot;(
      selection:#&quot;SYSTEM_SYSRULES_querySelection&quot;(
        columns:{
          #&quot;SYSTEM_SYSRULES_queryColumn&quot;(field:&quot;meetingId&quot;)
        }
      ),
      logicalExpression:#&quot;SYSTEM_SYSRULES_queryLogicalExpression&quot;(
        operator:&quot;AND&quot;,
        filters:{
          #&quot;SYSTEM_SYSRULES_queryFilter&quot;(
            field:&quot;userName&quot;,
            operator:&quot;=&quot;,
            value:fn!loggedinuser()
          ),
          #&quot;SYSTEM_SYSRULES_queryFilter&quot;(
            field:&quot;isActive&quot;,
            operator:&quot;=&quot;,
            value:true
          )
        }
      ),
      pagingInfo:local!pagingInfo
    )
  ).data, 
if(fn!isusermemberofgroup(fn!loggedinuser(),#&quot;_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35704&quot;),
    {
      index(
      #&quot;SYSTEM_SYSRULES_queryEntity&quot;(
        entity:#&quot;_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35551&quot;,
        query:#&quot;SYSTEM_SYSRULES_query&quot;(
          selection:#&quot;SYSTEM_SYSRULES_querySelection&quot;(
            columns:{
              #&quot;SYSTEM_SYSRULES_queryColumn&quot;(field:&quot;meetingId&quot;)
            }
          ),
          filter:#&quot;SYSTEM_SYSRULES_queryFilter&quot;(
            field:&quot;status&quot;,
            operator:&quot;&lt;&gt;&quot;,
            value:#&quot;_a-0000dcd9-a1ca-8000-9ba2-011c48011c48_35743&quot;[4]
            ),
          pagingInfo:#&quot;SYSTEM_SYSRULES_pagingInfo&quot;(
              startIndex:1,
              batchSize:-1
              )
        )
      ).data,&quot;meetingId&quot;,{})
    },
    union(
      index(local!int_meetingIds1,&quot;meetingId&quot;,{}),
      index(local!int_meetingIds2,&quot;meetingId&quot;,{})
    )
  )

)</definition>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
